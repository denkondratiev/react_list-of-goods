{"version":3,"sources":["components/Buttons/Buttons.js","shapes.js","components/GoodsSelect/GoodsSelect.js","components/GoodsList/GoodsList.js","components/ButtonToggle/ButtonToggle.js","App.js","index.js"],"names":["Buttons","PropTypes","shape","goods","string","height","maxLength","number","sortReverse","func","sortAlphabetically","sortByLength","reset","toggleButton","display","GoodsSelect","options","arrayOf","isRequired","props","className","onClick","type","selectLength","htmlFor","id","onChange","e","target","value","map","val","key","GoodsList","state","length","setState","prevState","reverse","sort","a","b","localeCompare","replace","filter","item","this","Array","keys","style","slice","resetSelect","React","Component","ButtonToggle","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49d72856.chunk.js","sourcesContent":["import React from 'react';\nimport './Buttons.css';\nimport { ButtonsShape } from '../../shapes';\n\nexport const Buttons = (props) => {\n  const { sortReverse, sortAlphabetically, sortByLength, reset } = props;\n\n  return (\n    <div className=\"btn-group\">\n      <button\n        onClick={sortReverse}\n        type=\"button\"\n        className=\"btn btn-info\"\n      >\n        Reverse\n      </button>\n      <button\n        onClick={sortAlphabetically}\n        type=\"button\"\n        className=\"btn btn-info\"\n      >\n        Sort alphabetically\n      </button>\n      <button\n        onClick={sortByLength}\n        type=\"button\"\n        className=\"btn btn-info\"\n      >\n        Sort by length\n      </button>\n      <button\n        onClick={reset}\n        type=\"button\"\n        className=\"btn btn-info\"\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n\nButtons.propTypes = ButtonsShape.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const GoodsListShape = PropTypes.shape({\n  goods: PropTypes.string,\n  height: PropTypes.string,\n  maxLength: PropTypes.number,\n});\n\nexport const ButtonsShape = PropTypes.shape({\n  sortReverse: PropTypes.func,\n  sortAlphabetically: PropTypes.func,\n  sortByLength: PropTypes.func,\n  reset: PropTypes.func,\n});\n\nexport const ButtonToggleShape = PropTypes.shape({\n  toggleButton: PropTypes.func,\n  display: PropTypes.string,\n});\n\nexport const GoodsSelectShape = PropTypes.shape({\n  GoodsSelect: PropTypes.func,\n  options: PropTypes.arrayOf(PropTypes.number.isRequired),\n});\n","import React from 'react';\nimport { GoodsSelectShape } from '../../shapes';\n\nexport const GoodsSelect = (props) => {\n  const { selectLength, options } = props;\n\n  return (\n    <div className=\"input-group mb-3\">\n      <div className=\"input-group-prepend\">\n        <label\n          className=\"input-group-text\"\n          htmlFor=\"inputGroupSelect\"\n        >\n          Item length more then...\n        </label>\n      </div>\n      <select\n        className=\"custom-select\"\n        id=\"inputGroupSelect\"\n        onChange={e => selectLength(e.target.value)}\n      >\n        {options.map(val => (\n          <option key={val} value={val + 1}>{val + 1}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nGoodsSelect.propTypes = GoodsSelectShape.isRequired;\n","import React from 'react';\nimport { GoodsListShape } from '../../shapes';\nimport './GoodsList.css';\nimport { Buttons } from '../Buttons/Buttons';\nimport { GoodsSelect } from '../GoodsSelect/GoodsSelect';\n\nexport class GoodsList extends React.Component {\n    state = {\n      goods: this.props.goods,\n      maxLength: this.props.goods.length,\n    };\n\n  sortReverse = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => (\n        a.replace(/\\s/g, '').length - b.replace(/\\s/g, '').length\n      )),\n    }));\n  }\n\n  reset = () => {\n    this.setState(prevState => ({\n      goods: [...this.props.goods],\n    }));\n  }\n\n  selectLength = (value) => {\n    this.setState({\n      goods: this.props.goods.filter(item => item.length >= value),\n    });\n  }\n\n  render() {\n    const { goods, maxLength } = this.state;\n    const { height } = this.props;\n\n    const options = [...Array(maxLength).keys()];\n\n    return (\n      <div className=\"goods\" style={{ height }}>\n        <ul className=\"goods__list list-group list-group-flush\">\n          {\n            goods.map(item => (\n              <li\n                className=\"list-group-item\"\n                key={item.slice(0, 3)}\n              >\n                {item}\n              </li>\n            ))\n          }\n        </ul>\n        <Buttons\n          sortReverse={this.sortReverse}\n          sortAlphabetically={this.sortAlphabetically}\n          sortByLength={this.sortByLength}\n          reset={this.reset}\n        />\n        <GoodsSelect\n          options={options}\n          selectLength={this.selectLength}\n          resetSelect={this.resetSelect}\n        />\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = GoodsListShape.isRequired;\n","import React from 'react';\nimport './ButtonToggle.css';\nimport { ButtonToggleShape } from '../../shapes';\n\nexport const ButtonToggle = (props) => {\n  const { toggleButton, display } = props;\n\n  return (\n    <div className=\"main__button\">\n      <button\n        style={{ display }}\n        type=\"button\"\n        className=\"btn btn-success\"\n        onClick={toggleButton}\n      >\n        Start\n      </button>\n    </div>\n  );\n};\n\nButtonToggle.propTypes = ButtonToggleShape.isRequired;\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { ButtonToggle } from './components/ButtonToggle/ButtonToggle';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    display: '',\n    height: 0,\n  }\n\n  toggleButton = () => {\n    this.setState(prevState => ({\n      display: `${prevState.display}none`,\n      height: `${prevState.height + 650}px`,\n    }));\n  }\n\n  render() {\n    const { display, height } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1>Goods List</h1>\n        </header>\n        <section className=\"main\">\n          <ButtonToggle toggleButton={this.toggleButton} display={display} />\n          <GoodsList goods={goodsFromServer} height={height} />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}