{"version":3,"sources":["components/Buttons/Buttons.js","shapes.js","components/GoodsSelect/GoodsSelect.js","components/GoodsList/GoodsList.js","components/ButtonToggle/ButtonToggle.js","App.js","index.js"],"names":["Buttons","PropTypes","shape","goods","string","height","maxLength","number","sortReverse","func","sortAlphabetically","sortByLength","reset","toggleButton","display","selectLength","options","arrayOf","isRequired","selected","props","className","Object","entries","map","name","key","onClick","type","replace","GoodsSelect","htmlFor","id","onChange","e","target","value","val","GoodsList","state","length","setState","prevState","reverse","sort","a","b","localeCompare","filter","item","this","Array","keys","style","React","Component","ButtonToggle","goodsFromServer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d933658.chunk.js","sourcesContent":["import React from 'react';\nimport './Buttons.css';\nimport { ButtonsShape } from '../../shapes';\n\nexport const Buttons = props => (\n  <div className=\"btn-group\">\n    {Object.entries(props).map(name => (\n      <button\n        key={name}\n        onClick={name[1]}\n        type=\"button\"\n        className=\"btn btn-info\"\n      >\n        {name[0].replace(/sort/ig, '')}\n      </button>\n    ))\n    }\n  </div>\n);\n\nButtons.propTypes = ButtonsShape.isRequired;\n","import PropTypes from 'prop-types';\n\nexport const GoodsListShape = PropTypes.shape({\n  goods: PropTypes.string,\n  height: PropTypes.string,\n  maxLength: PropTypes.number,\n});\n\nexport const ButtonsShape = PropTypes.shape({\n  sortReverse: PropTypes.func,\n  sortAlphabetically: PropTypes.func,\n  sortByLength: PropTypes.func,\n  reset: PropTypes.func,\n});\n\nexport const ButtonToggleShape = PropTypes.shape({\n  toggleButton: PropTypes.func,\n  display: PropTypes.string,\n});\n\nexport const GoodsSelectShape = PropTypes.shape({\n  selectLength: PropTypes.func,\n  options: PropTypes.arrayOf(PropTypes.number.isRequired),\n  selected: PropTypes.number,\n});\n","import React from 'react';\nimport { GoodsSelectShape } from '../../shapes';\n\nexport const GoodsSelect = (props) => {\n  const { selectLength, options, selected } = props;\n\n  return (\n    <div className=\"input-group mb-3\">\n      <div className=\"input-group-prepend\">\n        <label\n          className=\"input-group-text\"\n          htmlFor=\"inputGroupSelect\"\n        >\n          Item length more then...\n        </label>\n      </div>\n      <select\n        className=\"custom-select\"\n        id=\"inputGroupSelect\"\n        onChange={e => selectLength(e.target.value)}\n      >\n        {options.map(val => (\n          <option\n            key={val}\n            value={val + 1}\n            selected={selected === val}\n          >\n            {val + 1}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nGoodsSelect.propTypes = GoodsSelectShape.isRequired;\n","import React from 'react';\nimport { GoodsListShape } from '../../shapes';\nimport './GoodsList.css';\nimport { Buttons } from '../Buttons/Buttons';\nimport { GoodsSelect } from '../GoodsSelect/GoodsSelect';\n\nexport class GoodsList extends React.Component {\n    state = {\n      goods: this.props.goods,\n      maxLength: this.props.goods.length,\n      selected: 0,\n    };\n\n  sortReverse = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].reverse(),\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(prevState => ({\n      goods: [...prevState.goods].sort((a, b) => (\n        a.replace(/\\s/g, '').length - b.replace(/\\s/g, '').length\n      )),\n    }));\n  }\n\n  reset = () => {\n    this.setState(prevState => ({\n      goods: [...this.props.goods],\n      selected: 0,\n    }));\n  }\n\n  selectLength = (value) => {\n    this.setState({\n      goods: this.props.goods.filter(item => item.length >= value),\n      selected: value,\n    });\n  }\n\n  render() {\n    const { goods, maxLength, selected } = this.state;\n    const { height } = this.props;\n\n    const options = [...Array(maxLength).keys()];\n\n    return (\n      <div className=\"goods\" style={{ height }}>\n        <ul className=\"goods__list list-group list-group-flush\">\n          {\n            goods.map(item => (\n              <li\n                className=\"list-group-item\"\n                key={item}\n              >\n                {item}\n              </li>\n            ))\n          }\n        </ul>\n        <Buttons\n          sortReverse={this.sortReverse}\n          sortAlphabetically={this.sortAlphabetically}\n          sortByLength={this.sortByLength}\n          reset={this.reset}\n        />\n        <GoodsSelect\n          options={options}\n          selectLength={this.selectLength}\n          selected={selected}\n        />\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = GoodsListShape.isRequired;\n","import React from 'react';\nimport './ButtonToggle.css';\nimport { ButtonToggleShape } from '../../shapes';\n\nexport const ButtonToggle = (props) => {\n  const { toggleButton, display } = props;\n\n  return (\n    <div className=\"main__button\">\n      <button\n        style={{ display }}\n        type=\"button\"\n        className=\"btn btn-success\"\n        onClick={toggleButton}\n      >\n        Start\n      </button>\n    </div>\n  );\n};\n\nButtonToggle.propTypes = ButtonToggleShape.isRequired;\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { ButtonToggle } from './components/ButtonToggle/ButtonToggle';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    display: '',\n    height: 0,\n  }\n\n  toggleButton = () => {\n    this.setState(prevState => ({\n      display: `${prevState.display}none`,\n      height: `${prevState.height + 650}px`,\n    }));\n  }\n\n  render() {\n    const { display, height } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1>Goods List</h1>\n        </header>\n        <section className=\"main\">\n          <ButtonToggle toggleButton={this.toggleButton} display={display} />\n          <GoodsList goods={goodsFromServer} height={height} />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}